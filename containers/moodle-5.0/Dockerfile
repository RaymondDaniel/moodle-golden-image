# Golden Image Multi-stage Dockerfile FROM php:8.2-fpm-alpine as base # Install system dependencies RUN apk add --no-cache \ nginx \ supervisor \ curl \ git \ libpng-dev \ libjpeg-turbo-dev \ freetype-dev \ icu-dev \ libxml2-dev \ libzip-dev \ oniguruma-dev \ ghostscript \ imagemagick \ imagemagick-dev \ nfs-utils \ && rm -rf /var/cache/apk/* # Install PHP extensions RUN docker-php-ext-configure gd --with-freetype --with-jpeg && \ docker-php-ext-install -j$(nproc) \ gd intl mysqli pdo_mysql soap xml zip opcache exif mbstring # Install Redis and APCu extensions RUN pecl install redis apcu && \ docker-php-ext-enable redis apcu # Production stage FROM base as production # Build arguments for Golden Image access ARG GITHUB_REPO_URL ARG GITHUB_PAT ARG BUILD_BRANCH="production-v5.0.1" # Clone Golden Image repository RUN if [ -n "$GITHUB_PAT" ]; then \ REPO_WITH_TOKEN=$(echo $GITHUB_REPO_URL | sed "s|https://|https://$GITHUB_PAT@|"); \ else \ REPO_WITH_TOKEN=$GITHUB_REPO_URL; \ fi && \ git clone --depth 1 --branch $BUILD_BRANCH $REPO_WITH_TOKEN /tmp/moodle-source && \ # Copy Moodle core files \ cp -r /tmp/moodle-source/* /var/www/html/ && \ # Remove .git to reduce image size \ rm -rf /var/www/html/.git && \ # Install custom plugins if they exist \ if [ -d "/tmp/moodle-source/plugins" ]; then \ find /tmp/moodle-source/plugins -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | while read plugin; do \ if [ -d "/tmp/moodle-source/plugins/$plugin" ]; then \ cp -r "/tmp/moodle-source/plugins/$plugin" "/var/www/html/mod/$plugin"; \ fi; \ done; \ fi && \ # Install custom themes \ if [ -d "/tmp/moodle-source/themes" ]; then \ cp -r /tmp/moodle-source/themes/* /var/www/html/theme/; \ fi && \ # Copy container configurations \ if [ -d "/tmp/moodle-source/containers/moodle-5.0/configs" ]; then \ cp /tmp/moodle-source/containers/moodle-5.0/configs/* /usr/local/etc/php/ 2>/dev/null || true; \ cp /tmp/moodle-source/containers/moodle-5.0/configs/nginx.conf /etc/nginx/nginx.conf 2>/dev/null || true; \ cp /tmp/moodle-source/containers/moodle-5.0/configs/supervisord.conf /etc/supervisor/conf.d/ 2>/dev/null || true; \ fi && \ # Copy scripts \ if [ -d "/tmp/moodle-source/containers/moodle-5.0/scripts" ]; then \ cp /tmp/moodle-source/containers/moodle-5.0/scripts/* / 2>/dev/null || true; \ fi && \ # Clean up \ rm -rf /tmp/moodle-source # Create directories and set permissions RUN mkdir -p /var/moodledata /var/log/moodle /tmp/moodle && \ chown -R www-data:www-data /var/www/html /var/moodledata /var/log/moodle /tmp/moodle && \ chmod +x /start.sh /health-check.sh 2>/dev/null || true # Health check HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \ CMD /health-check.sh || exit 1 EXPOSE 8080 CMD ["/start.sh"]
